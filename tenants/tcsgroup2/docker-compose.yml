networks:
  tcsgroup2: {}
services:
  tcsgroup2_backend:
    build: backend
    command: sh -c 'sleep 15 && npm run deploy'
    container_name: tcsgroup2_backend
    depends_on:
      tcsgroup2_db:
        condition: service_healthy
      tcsgroup2_redis:
        condition: service_started
    env_file: backend/.env
    environment:
      DB_SERVER: tcsgroup2_db
      NODE_ENV: development
    extra_hosts:
    - tcsgroup2.vsync:127.0.0.1
    networks:
    - tcsgroup2
    ports:
    - 5337:5004
  tcsgroup2_db:
    container_name: tcsgroup2_db
    environment:
      POSTGRES_DB: tcsgroup2_master
      POSTGRES_PASSWORD: xv0vioak17skojb2
      POSTGRES_USER: tcsgroup2_user
    healthcheck:
      interval: 10s
      retries: 5
      start_period: 10s
      test:
      - CMD-SHELL
      - bash -c 'PGUSER=$POSTGRES_USER pg_isready'
      timeout: 5s
    image: postgres:15
    networks:
    - tcsgroup2
    volumes:
    - tcsgroup2_db_data:/var/lib/postgresql/data
  tcsgroup2_frontend:
    build: frontend
    command: npm start
    container_name: tcsgroup2_frontend
    depends_on:
    - tcsgroup2_backend
    env_file: frontend/.env
    environment:
      PORT: '3001'
    extra_hosts:
    - tcsgroup2.vsync:127.0.0.1
    networks:
    - tcsgroup2
    ports:
    - 6337:3001
  tcsgroup2_nginx:
    container_name: tcsgroup2_nginx
    depends_on:
    - tcsgroup2_backend
    - tcsgroup2_frontend
    extra_hosts:
    - tcsgroup2.vsync:127.0.0.1
    image: nginx:latest
    networks:
    - tcsgroup2
    ports:
    - 8337:80
    restart: on-failure
    volumes:
    - /Users/imjgautam/Desktop/MERN & PERN/bench/tenants/tcsgroup2/nginx.conf:/etc/nginx/conf.d/default.conf:ro
  tcsgroup2_redis:
    container_name: tcsgroup2_redis
    environment:
      REDIS_PASSWORD: 857zayijfxdo3ht1
    image: redis:7
    networks:
    - tcsgroup2
    volumes:
    - tcsgroup2_redis_data:/var/lib/redis/data
version: '3.8'
volumes:
  tcsgroup2_db_data: {}
  tcsgroup2_nginx_config:
    driver: local
  tcsgroup2_redis_data: {}
